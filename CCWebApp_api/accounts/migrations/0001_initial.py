# Generated by Django 5.0.3 on 2024-03-07 11:55

import accounts.models
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=accounts.models.random_code_generator, editable=False, max_length=10, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('middle_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('extension_name', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('mobile_number', models.CharField(max_length=200, null=True, unique=True)),
                ('usertype', models.CharField(choices=[('Admin', 'Admin'), ('Faculty', 'Faculty'), ('Student', 'Student'), ('Sub-admin', 'Sub-admin')], max_length=20, null=True)),
                ('registration_datetime', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.FileField(default='avatar.webp', upload_to='uploads/')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Unspecified', max_length=20)),
                ('birthdate', models.DateField(null=True)),
                ('birthplace', models.CharField(blank=True, max_length=200, null=True)),
                ('nationality', models.CharField(blank=True, max_length=200, null=True)),
                ('address_value1', models.CharField(max_length=200, null=True)),
                ('address_value2', models.CharField(max_length=200, null=True)),
                ('address_value3', models.CharField(max_length=200, null=True)),
                ('addressketch', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FacultyProfile',
            fields=[
                ('id', models.CharField(default=accounts.models.student_code_generator, editable=False, primary_key=True, serialize=False, unique=True)),
                ('position', models.CharField(choices=[('Principal', 'Principal'), ('Assistant Principal', 'Assistant Principal'), ('Part-Time', 'Part-Time'), ('Teacher-1', 'Teacher-1'), ('Teacher-2', 'Teacher-2'), ('Teacher-3', 'Teacher-3'), ('Laboratory Attendant', 'Laboratory Attendant'), ('Unspecified', 'Unspecified')], default='Unspecified', max_length=50)),
                ('userprofile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facultyprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.CharField(default=accounts.models.student_code_generator, editable=False, primary_key=True, serialize=False, unique=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Staff', 'Staff'), ('Not Specified', 'Not Specified'), ('Registrar', 'Registrar'), ('Guidance', 'Guidance')], default='Not Specified', max_length=50)),
                ('userprofile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.CharField(default=accounts.models.student_code_generator, editable=False, primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('gradelevel', models.CharField(choices=[('Grade 7', 'Grade 7'), ('Grade 8', 'Grade 8'), ('Grade 9', 'Grade 9'), ('Grade 10', 'Grade 10'), ('Grade 11', 'Grade 11'), ('Grade 12', 'Grade 12')], default='Grade 7', max_length=20)),
                ('status', models.CharField(choices=[('For Evaluation', 'For Evaluation'), ('Evaluation In Progress', 'Evaluation In Progress'), ('Pending Payment', 'Pending Payment'), ('Enrolled', 'Enrolled')], default='For Evaluation', max_length=50)),
                ('facebook_url', models.CharField(max_length=200, null=True)),
                ('guardian_name', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('guardian_relationship', models.CharField(blank=True, max_length=200, null=True)),
                ('father_name', models.CharField(blank=True, max_length=200, null=True)),
                ('father_mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=200, null=True)),
                ('mother_mobile', models.CharField(blank=True, max_length=200, null=True)),
                ('elementaryschool', models.CharField(blank=True, max_length=200, null=True)),
                ('elementarycompletiondate', models.DateField(null=True)),
                ('elementaryaddress', models.CharField(blank=True, max_length=200, null=True)),
                ('elementaryregion', models.CharField(blank=True, max_length=200, null=True)),
                ('pept', models.BooleanField(blank=True, null=True)),
                ('peptcompletion', models.DateField(null=True)),
                ('petpclc', models.CharField(blank=True, max_length=200, null=True)),
                ('ae', models.BooleanField(blank=True, null=True)),
                ('aecompletion', models.DateField(null=True)),
                ('clc', models.CharField(blank=True, max_length=200, null=True)),
                ('clcaddress', models.CharField(blank=True, max_length=200, null=True)),
                ('jhs', models.CharField(blank=True, max_length=200, null=True)),
                ('jhsaddress', models.CharField(blank=True, max_length=200, null=True)),
                ('jhscompletion', models.DateField(null=True)),
                ('jhsregion', models.CharField(blank=True, max_length=200, null=True)),
                ('jhsaverage', models.FloatField(blank=True, null=True)),
                ('peptjhs', models.BooleanField(blank=True, null=True)),
                ('peptcompletionjhs', models.DateField(null=True)),
                ('petpclcjhs', models.CharField(blank=True, max_length=200, null=True)),
                ('aejhs', models.BooleanField(blank=True, null=True)),
                ('aecompletionjhs', models.DateField(null=True)),
                ('clcjhs', models.CharField(blank=True, max_length=200, null=True)),
                ('clcaddressjhs', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1address', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1track1', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1strand1', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1track2', models.CharField(blank=True, max_length=200, null=True)),
                ('shs1strand2', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2address', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2track1', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2strand1', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2track2', models.CharField(blank=True, max_length=200, null=True)),
                ('shs2strand2', models.CharField(blank=True, max_length=200, null=True)),
                ('track', models.CharField(blank=True, max_length=200, null=True)),
                ('strand', models.CharField(blank=True, max_length=200, null=True)),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('userprofile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='studentprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
